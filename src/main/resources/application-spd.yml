spring:
    #配置sharding jdbc分片规则
    shardingsphere:
        # 参数配置，显示sql
        props:
            sql:
                show: true
        #配置数据源
        datasource:
            #给每个数据源取别名，下面的ds10,ds1任意取名字
            names: ds0,ds1
            # ds0数据源配置数据库连接信息
            ds0:
                #配置druid数据源
                type: com.alibaba.druid.pool.DruidDataSource
                driver-class-name: com.mysql.cj.jdbc.Driver
                url: jdbc:mysql://localhost:3306/sp1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false
                username: root
                password: 123456
                maxPoolSize: 100
                minPoolSize: 5
            # 配置ds1数据库连接信息
            ds1:
                #配置druid数据源
                type: com.alibaba.druid.pool.DruidDataSource
                driver-class-name: com.mysql.cj.jdbc.Driver
                url: jdbc:mysql://localhost:3306/sp2?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false
                username: root
                password: 123456
                maxPoolSize: 100
                minPoolSize: 5
        #配置分片规则
        sharding:
            # 默认数据源
            default-data-source-name: ds0
            # 配置分表的规则
            tables:
                # sys_user逻辑表名
                sys_user:
                    # 数据节点：数据源$ ->{0..N}.逻辑表名$->{0..N}
                    # 数据节点配置，采用Groovy表达式，切分之后的真实表所在的节点
                    actual-data-nodes: ds$->{0..1}.sys_user$->{1..3}
                    # 拆分库策略，也就是什么样子的数据放到哪个数据库中
                    database-strategy:
                        inline:
                            # 分片键为ID
                            sharding-column: id
                            # 分片策略取模
                            algorithm-expression: ds$->{id % 2}
                    #拆表策略
                    table-strategy:
                        standard:
                            shardingColumn: id
                            preciseAlgorithmClassName: com.study.shardingjdbc.shard.ConsistenceHashAlgorithm
                t_role: #单库单表
                    actualDataNodes: ds0.t_role

            #广播表 公共表
            broadcast-tables: role_user
